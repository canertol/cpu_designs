
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module de0nano_embedding(

	//////////// CLOCK //////////
	CLOCK_50,

	//////////// LED //////////
	LED,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SDRAM //////////
	DRAM_ADDR,
	DRAM_BA,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CLK,
	DRAM_CS_N,
	DRAM_DQ,
	DRAM_DQM,
	DRAM_RAS_N,
	DRAM_WE_N,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	GPIO_0,
	GPIO_0_IN,

	//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
	GPIO_1,
	GPIO_1_IN 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;

//////////// LED //////////
output		     [7:0]		LED;

//////////// KEY //////////
input 		     [1:0]		KEY;

//////////// SW //////////
input 		     [3:0]		SW;

//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR;
output		     [1:0]		DRAM_BA;
output		          		DRAM_CAS_N;
output		          		DRAM_CKE;
output		          		DRAM_CLK;
output		          		DRAM_CS_N;
input 		    [15:0]		DRAM_DQ;
output		     [1:0]		DRAM_DQM;
output		          		DRAM_RAS_N;
output		          		DRAM_WE_N;

//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
input 		    [33:0]		GPIO_0;
input 		     [1:0]		GPIO_0_IN;

//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
input 		    [33:0]		GPIO_1;
input 		     [1:0]		GPIO_1_IN;


//=======================================================
//  REG/WIRE declarations
//=======================================================


parameter W = 4;

/*
//======================PART 1==========================
wire [1:0] A1, A2, A3;
wire WE; 
assign WE = 1'b1;
assign A1 = 2'b01;
assign A2 = 2'b10;
assign A3 = 2'b01;



//  Structural coding


register_file #(W) (.clk(KEY[1]),
							.data_in(SW),
								.WE3(WE),
								.A1(A1), .A2(A2), .A3(A3), 
								.RD1(LED[7:4]), .RD2(LED[3:0])			
						);
//=======================================================
						
*/

//======================PART 2==========================
wire [3:0] data_in;
wire [2:0] add;
wire R1Src,Q_right, Acc_parallel, ASrc;
wire [1:0] Acc_Lsrc;

assign data_in = 4'b0010;
assign add = 3'b000;
//assign R1Src = 1'b1;
//assign Q_right = 1'b1;
//assign Acc_Lsrc = 1'b00;
//assign Acc_parallel = 1'b0;
//assign ASrc = 1'b0;

DATAPATH data_path(.CLK(!KEY[1]),
					.R1Src(SW[3]),.Acc_parallel(!KEY[0]),
					.Acc_Lsrc(SW[1:0]),//.Q_right(SW[2]),
					.DATA(data_in),.test(LED[3:0]),
					.ALUControl(add), .R1out(LED[7:4]), .ASrc(SW[2])
					
					);		
							


//=======================================================

endmodule